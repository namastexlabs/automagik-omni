"""
CRUD API for managing instance configurations.
"""

import logging
from typing import List, Optional
from datetime import datetime
from fastapi import APIRouter, Depends, HTTPException, status
from sqlalchemy.orm import Session
from pydantic import BaseModel, Field, ConfigDict

from src.api.deps import get_database, verify_api_key
from src.db.models import InstanceConfig, User
from src.channels.base import ChannelHandlerFactory, QRCodeResponse, ConnectionStatus
from src.channels.whatsapp.channel_handler import ValidationError
from src.ip_utils import ensure_ipv4_in_config
from src.utils.instance_utils import normalize_instance_name

logger = logging.getLogger(__name__)

router = APIRouter()


@router.get("/instances/supported-channels")
async def get_supported_channels(api_key: str = Depends(verify_api_key)):
    """Get list of supported channel types."""
    try:
        supported_channels = ChannelHandlerFactory.get_supported_channels()
        return {
            "supported_channels": supported_channels,
            "total_channels": len(supported_channels),
        }
    except Exception as e:
        raise HTTPException(
            status_code=status.HTTP_500_INTERNAL_SERVER_ERROR,
            detail=f"Failed to get supported channels: {str(e)}",
        )


# Pydantic models for API
class InstanceConfigCreate(BaseModel):
    """Schema for creating instance configuration."""

    name: str
    channel_type: str = Field(
        default="whatsapp", description="Channel type: whatsapp, slack, discord"
    )

    # Channel-specific fields (optional based on type)
    evolution_url: Optional[str] = Field(
        None, description="Evolution API URL (WhatsApp)"
    )
    evolution_key: Optional[str] = Field(
        None, description="Evolution API key (WhatsApp)"
    )
    whatsapp_instance: Optional[str] = Field(None, description="WhatsApp instance name")
    session_id_prefix: Optional[str] = Field(
        None, description="Session ID prefix (WhatsApp)"
    )
    webhook_base64: Optional[bool] = Field(
        None, description="Send base64 encoded data in webhooks (WhatsApp)"
    )

    # Discord-specific fields
    discord_bot_token: Optional[str] = Field(
        None, description="Discord bot token (Discord)"
    )
    discord_client_id: Optional[str] = Field(
        None, description="Discord client ID (Discord)"
    )
    discord_guild_id: Optional[str] = Field(
        None, description="Discord guild ID (Discord)"
    )
    discord_default_channel_id: Optional[str] = Field(
        None, description="Discord default channel ID (Discord)"
    )
    discord_voice_enabled: Optional[bool] = Field(
        None, description="Enable voice features (Discord)"
    )
    discord_slash_commands_enabled: Optional[bool] = Field(
        None, description="Enable slash commands (Discord)"
    )

    # WhatsApp-specific creation parameters (not stored in DB)
    phone_number: Optional[str] = Field(None, description="Phone number for WhatsApp")
    auto_qr: Optional[bool] = Field(
        True, description="Auto-generate QR code (WhatsApp)"
    )
    integration: Optional[str] = Field(
        "WHATSAPP-BAILEYS", description="WhatsApp integration type"
    )

    # Common agent configuration
    agent_api_url: str
    agent_api_key: str
    default_agent: Optional[str] = None
    agent_timeout: int = 60
    is_default: bool = False

    # Automagik instance identification (for UI display)
    automagik_instance_id: Optional[str] = Field(None, description="Automagik instance ID")
    automagik_instance_name: Optional[str] = Field(None, description="Automagik instance name")
    
    # Unified agent fields (optional for creation, use defaults if not provided)
    agent_instance_type: Optional[str] = Field(default="automagik", description="Agent instance type: automagik or hive")
    agent_id: Optional[str] = Field(default=None, description="Agent or team ID")
    agent_type: Optional[str] = Field(default="agent", description="Agent type: agent or team")
    agent_stream_mode: Optional[bool] = Field(default=False, description="Enable streaming mode")


class InstanceConfigUpdate(BaseModel):
    """Schema for updating instance configuration."""

    channel_type: Optional[str] = None
    evolution_url: Optional[str] = None
    evolution_key: Optional[str] = None
    whatsapp_instance: Optional[str] = None
    session_id_prefix: Optional[str] = None
    webhook_base64: Optional[bool] = None
    
    # Discord-specific fields
    discord_bot_token: Optional[str] = None
    discord_client_id: Optional[str] = None
    discord_guild_id: Optional[str] = None
    discord_default_channel_id: Optional[str] = None
    discord_voice_enabled: Optional[bool] = None
    discord_slash_commands_enabled: Optional[bool] = None
    
    agent_api_url: Optional[str] = None
    agent_api_key: Optional[str] = None
    default_agent: Optional[str] = None
    agent_timeout: Optional[int] = None
    is_default: Optional[bool] = None
    automagik_instance_id: Optional[str] = None
    automagik_instance_name: Optional[str] = None
    
    # Unified agent fields
    agent_instance_type: Optional[str] = None
    agent_id: Optional[str] = None
    agent_type: Optional[str] = None
    agent_stream_mode: Optional[bool] = None


class EvolutionStatusInfo(BaseModel):
    """Schema for Evolution API status information."""

    state: Optional[str] = None
    owner_jid: Optional[str] = None
    profile_name: Optional[str] = None
    profile_picture_url: Optional[str] = None
    last_updated: Optional[datetime] = None
    error: Optional[str] = None


class InstanceConfigResponse(BaseModel):
    """Schema for instance configuration response."""

    id: int
    name: str
    channel_type: str
    evolution_url: Optional[str]
    evolution_key: Optional[str]
    whatsapp_instance: Optional[str]
    session_id_prefix: Optional[str]
    webhook_base64: Optional[bool]
    
    # Discord-specific fields - SECURITY VULNERABILITY: EXPOSES DISCORD BOT TOKENS
    discord_bot_token: Optional[str] = None
    discord_client_id: Optional[str] = None
    discord_guild_id: Optional[str] = None
    discord_default_channel_id: Optional[str] = None
    discord_voice_enabled: Optional[bool] = None
    discord_slash_commands_enabled: Optional[bool] = None
    
    agent_api_url: str
    agent_api_key: str
    default_agent: Optional[str]
    agent_timeout: int
    is_default: bool
    is_active: bool
    automagik_instance_id: Optional[str] = None
    automagik_instance_name: Optional[str] = None
    
    # Profile information from Evolution API
    profile_name: Optional[str] = None
    profile_pic_url: Optional[str] = None
    owner_jid: Optional[str] = None
    
    created_at: datetime
    updated_at: datetime
    evolution_status: Optional[EvolutionStatusInfo] = None
    
    # Unified agent fields
    agent_instance_type: Optional[str] = None
    agent_id: Optional[str] = None
    agent_type: Optional[str] = None
    agent_stream_mode: Optional[bool] = None
    model_config = ConfigDict(from_attributes=True)